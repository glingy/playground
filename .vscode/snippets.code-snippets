{
	// Place your software workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	"Header": {
		"scope": "c,c++",
		"prefix": "#ifn",
		"body": [ // Yup, huuge regex to get the correct name for the header file in the correct format.
			"#ifndef ${1:${RELATIVE_FILEPATH/(?:^lib[\\/\\\\]prisum[\\/\\\\]include[\\/\\\\]|^sources[\\/\\\\][^\\/\\\\]*\\/)?([^\\/\\\\.]*)[\\/\\\\.]([^\\/\\\\.]$)?/${1:/upcase}_${2:/upcase}/g}}",
			"#define $1",
			"",
			"$0",
			"",
			"#endif"
		],
		"description": "Basic header file layout"
	},
	"Typedef Struct": {
		"scope": "c",
		"prefix": "ty",
		"body": [
			"typedef struct {",
			"  $0",
			"} $1_t;"
		]
	},
	"Enum": {
		"scope": "c",
		"prefix": "en",
		"body": [
			"enum {",
			"  $0",
			"};"
		]
	}
}